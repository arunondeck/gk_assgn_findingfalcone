{"version":3,"sources":["stores/initialState.js","actions/actionTypes.js","reducers/index.js","stores/index.js","constants/index.js","actions/index.js","components/Sidebar.js","components/FFSelector.js","components/FFSelectorMain.js","components/FFSearchETA.js","components/FFSendArmyControl.js","components/FFArmyResult.js","components/FFContainer.js","App.js","index.js"],"names":["initialState","initialized","token","planets","vehicles","armyCount","armies","availablePlanets","availableVehicles","armyTemplate","planet","vehicle","searchTime","updateSearchTime","armyReady","armyResult","armySent","actionTypes","REQUEST_TOKEN","RECEIVE_TOKEN","REQUEST_PLANETS","RECEIVE_PLANETS","REQUEST_VEHICLES","RECEIVE_VEHICLES","REQUEST_SENDARMY","RECEIVE_SENDARMY","REQUEST_DATA","RECEIVE_DATA","SELECT_PLANET","SELECT_VEHICLE","UPDATE_SEARCHTIME","INIT_APP","RESET_APP","ffReducer","state","arguments","length","undefined","action","console","log","type","i","push","Object","assign","map","name","slice","selectedArmy","armyID","selectedPlanets","filter","army","includes","selectedVehicles","used","reduce","sum","selectedVehicle","total_no","distance","speed","ready","data","status","store","createStore","reducer","applyMiddleware","thunk","ffConstants","TOKEN_URL","PLANETS_URL","VEHICLES_URL","FF_URL","init_app","request_vehicles","receive_vehicles","request_planets","receive_planets","request_token","receive_token","initApp","dispatch","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","data_1","wrap","_context2","prev","next","fetch","constants","sent","json","stop","this","_x3","apply","then","_ref3","_callee3","_context3","_x4","_ref","_callee","getState","_context","method","mode","headers","Accept","_x","_x2","Sidebar","formatString","text","charAt","toUpperCase","replace","_this2","react_default","createElement","lib","xs","className","props","assets","id","key","keys","prop","React","Component","FFSelector","handlePlanetSelect","_this","selectPlanet","value","handleVehicleSelect","selectVehicle","Heading","Body","controlId","onChange","componentClass","placeholder","inputRef","ref","connect","FFSelectorMain","bsStyle","md","components_FFSelector","availableAssets","FFSearchTimer","prevProps","prevState","snapshot","mdOffset","FFSendArmyControl","handleSendArmyBtnClick","e","Content-Type","body","JSON","stringify","planet_names","vehicle_names","disabled","onClick","bsSize","block","FFArmyResult","sendingArmy","react_spinners","sizeUnit","size","color","loading","armyReturned","planet_name","hasOwnProperty","FFContainer","handleResetBtnClick","findScreen","lg","Sidebar_Sidebar","FFSearchETA","FFSelectorMain_FFSelectorMain","components_FFSendArmyControl","loader","armySentScreen","FFArmyResult_FFArmyResult","fluid","title","App","components_FFContainer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bfe638b7.chunk.js","sourcesContent":["const initialState = {\r\n    initialized: true,\r\n    token: '',\r\n    planets: [],\r\n    vehicles: [],\r\n    armyCount: 4,\r\n    armies: [],\r\n    availablePlanets: [],\r\n    availableVehicles: [],\r\n    armyTemplate : {planet:'', vehicle: ''},\r\n    searchTime: 0,\r\n    updateSearchTime: false,\r\n    armyReady: false,\r\n    armyResult: {},\r\n    armySent: false\r\n}\r\n\r\nexport default initialState;","const actionTypes = {\r\n    REQUEST_TOKEN : 'REQUEST_TOKEN',\r\n    RECEIVE_TOKEN : 'RECEIVE_TOKEN',\r\n    REQUEST_PLANETS : 'REQUEST_PLANETS',\r\n    RECEIVE_PLANETS : 'RECEIVE_PLANETS',\r\n    REQUEST_VEHICLES : 'REQUEST_VEHICLES',\r\n    RECEIVE_VEHICLES : 'RECEIVE_VEHICLES',\r\n    REQUEST_SENDARMY : 'REQUEST_SENDARMY',\r\n    RECEIVE_SENDARMY : 'RECEIVE_SENDARMY',\r\n    REQUEST_DATA : 'REQUEST_DATA',\r\n    RECEIVE_DATA : 'RECEIVE_DATA',\r\n    SELECT_PLANET : 'SELECT_PLANET',\r\n    SELECT_VEHICLE : 'SELECT_VEHICLE',\r\n    UPDATE_SEARCHTIME : 'UPDATE_SEARCHTIME',\r\n    INIT_APP : 'INIT_APP',\r\n    RESET_APP : 'RESET_APP'\r\n}\r\n\r\nexport default actionTypes;","import initialState from '../stores/initialState';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nconst ffReducer = (state = initialState, action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case actionTypes.RESET_APP:\r\n            let armies = [];\r\n            for(let i = 0; i< state.armyCount; i++)\r\n                armies.push(state.armyTemplate);\r\n            return Object.assign({}, state, {\r\n                armies: armies, \r\n                initialized: true, \r\n                availablePlanets: state.planets.map((planet) => planet.name),\r\n                availableVehicles: state.vehicles, \r\n                searchTime: 0,\r\n                updateSearchTime: false,\r\n                armyReady: false,\r\n                armyResult: {},\r\n                armySent: false \r\n            });\r\n\r\n        case actionTypes.INIT_APP:\r\n            armies = [];\r\n            for(let i = 0; i< state.armyCount; i++)\r\n                armies.push(state.armyTemplate);\r\n            return Object.assign({}, state, {armies: armies, initialized: false});\r\n\r\n        case actionTypes.RECEIVE_TOKEN:\r\n            return Object.assign({}, state, {token: action.token});\r\n\r\n        case actionTypes.RECEIVE_PLANETS:\r\n            return Object.assign({}, state, {planets: action.planets, availablePlanets: action.planets.map((planet) => planet.name), initialized: state.availableVehicles.length>0});\r\n\r\n        case actionTypes.RECEIVE_VEHICLES:\r\n            return Object.assign({}, state, {vehicles: action.vehicles, availableVehicles: action.vehicles, initialized: state.availablePlanets.length>0});\r\n\r\n        case actionTypes.SELECT_PLANET:\r\n            armies = state.armies.slice();\r\n            let selectedArmy = Object.assign({},armies[action.armyID]);\r\n            selectedArmy.planet = action.planet;\r\n            armies[action.armyID] = selectedArmy;\r\n            let selectedPlanets = armies.filter((army) => army.planet !== '').map((army) => army.planet);\r\n            let availablePlanets = state.planets.filter((planet) => !selectedPlanets.includes(planet.name)).map((planet) => planet.name);\r\n            return Object.assign({}, state, {availablePlanets: availablePlanets, armies: armies, updateSearchTime: true});\r\n\r\n        case actionTypes.SELECT_VEHICLE:\r\n            armies = state.armies.slice();\r\n            selectedArmy = Object.assign({},armies[action.armyID]);\r\n            selectedArmy.vehicle = action.vehicle;\r\n            armies[action.armyID] = selectedArmy;\r\n            let selectedVehicles = armies.filter((army) => army.vehicle !== '').map((army) => army.vehicle);\r\n            let availableVehicles = state.vehicles.map((vehicle) => {\r\n                let used = selectedVehicles.reduce((sum, selectedVehicle) => selectedVehicle === vehicle.name ? sum + 1 : sum,0);\r\n                return Object.assign({}, vehicle, {total_no: vehicle.total_no - used});\r\n            })\r\n            .filter((vehicle) => vehicle.total_no > 0);\r\n            return Object.assign({}, state, {availableVehicles :availableVehicles, armies: armies, updateSearchTime: true});\r\n        \r\n        case actionTypes.UPDATE_SEARCHTIME:\r\n            let searchTime = state.armies.reduce((sum, army) => {\r\n                let distance = state.planets.filter((planet) => planet.name === army.planet).reduce((sum, planet) => sum + planet.distance, 0);\r\n                let speed = state.vehicles.filter((vehicle) => vehicle.name === army.vehicle).reduce((sum, vehicle) => sum + vehicle.speed,0);\r\n                return distance > 0 && speed > 0 ? sum + distance/speed : sum;\r\n            },0);\r\n            let armyReady = state.armies.reduce((ready, army) => {\r\n                return ready && army.planet !== '' && army.vehicle !== '';\r\n            },true);\r\n            return Object.assign({}, state, {searchTime: searchTime, updateSearchTime: false, armyReady: armyReady});\r\n\r\n        case actionTypes.REQUEST_SENDARMY:\r\n            return Object.assign({}, state, {armySent: true});\r\n\r\n        case actionTypes.RECEIVE_SENDARMY:\r\n            let armyResult = Object.assign({}, action.data);\r\n            armyResult.status = armyResult.status === 'false' ? false : true;\r\n            return Object.assign({}, state, {armyResult: armyResult});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ffReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunk));\r\n\r\nexport default store;","const ffConstants ={\r\n    TOKEN_URL: 'https://findfalcone.herokuapp.com/token',\r\n    PLANETS_URL: 'https://findfalcone.herokuapp.com/planets',\r\n    VEHICLES_URL: 'https://findfalcone.herokuapp.com/vehicles',\r\n    FF_URL: 'https://findfalcone.herokuapp.com/find'\r\n}\r\n\r\nexport default ffConstants;","import store from '../stores';\r\nimport actionTypes from '../actions/actionTypes';\r\nimport constants from '../constants';\r\n\r\nexport const init_app = () => {\r\n    return {\r\n        type: actionTypes.INIT_APP\r\n    }\r\n}\r\n\r\nexport const request_data = () => {\r\n    return {\r\n        type: actionTypes.REQUEST_DATA\r\n    }\r\n}\r\n\r\nexport const receive_data = data => {\r\n    return {\r\n        type: actionTypes.RECEIVE_DATA,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const request_vehicles = () => {\r\n    return {\r\n        type: actionTypes.REQUEST_VEHICLES\r\n    }\r\n}\r\n\r\nexport const receive_vehicles = data => {\r\n    return {\r\n        type: actionTypes.RECEIVE_VEHICLES,\r\n        vehicles: data\r\n    }\r\n}\r\n\r\nexport const request_planets = () => {\r\n    return {\r\n        type: actionTypes.REQUEST_PLANETS\r\n    }\r\n}\r\n\r\nexport const receive_planets = data => {\r\n    return {\r\n        type: actionTypes.RECEIVE_PLANETS,\r\n        planets: data\r\n    }\r\n}\r\n\r\nexport const request_findFalcone = () => {\r\n    return {\r\n        type: actionTypes.REQUEST_FINDFALCONE\r\n    }\r\n}\r\n\r\nexport const receive_findFalcone = data => {\r\n    return {\r\n        type: actionTypes.RECEIVE_FINDFALCONE,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport const request_token = () => {\r\n    return{\r\n        type: actionTypes.REQUEST_TOKEN\r\n    }\r\n}\r\n\r\nexport const receive_token = token => {\r\n    return{\r\n        type: actionTypes.RECEIVE_TOKEN,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const REQUEST_SENDARMY = () => {\r\n    return{\r\n        type: actionTypes.REQUEST_SENDARMY\r\n    }\r\n}\r\n\r\nexport const RECEIVE_SENDARMY = data => {\r\n    return{\r\n        type: actionTypes.RECEIVE_SENDARMY,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport function initApp(){\r\n    return dispatch => {\r\n        store.dispatch(init_app());\r\n        dispatch(requestPlanets()).then(data =>{\r\n            dispatch(requestVehicles()).then(data => {\r\n                return dispatch(requestToken());\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function requestToken(){\r\n    store.dispatch(request_token());\r\n    return async (dispatch, getState) => {\r\n        const data = await fetch(constants.TOKEN_URL, {\r\n            method: 'POST',\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        });\r\n        const data_1 = await data.json();\r\n        dispatch(receive_token(data_1.token));\r\n    }\r\n}\r\n\r\nexport function requestPlanets(){\r\n    store.dispatch(request_planets());\r\n    return async dispatch => {\r\n        const data = await fetch(constants.PLANETS_URL);\r\n        const data_1 = await data.json();\r\n        dispatch(receive_planets(data_1));\r\n    }\r\n}\r\n\r\nexport function requestVehicles(){\r\n    store.dispatch(request_vehicles());\r\n    return async dispatch => {\r\n        const data = await fetch(constants.VEHICLES_URL);\r\n        const data_1 = await data.json();\r\n        dispatch(receive_vehicles(data_1));\r\n    }\r\n}\r\n\r\nexport function requestFindFalcone(){\r\n    store.dispatch(REQUEST_SENDARMY());\r\n    return (dispatch, getState) => {\r\n        return fetch(constants.FF_URL, {\r\n            method: 'POST',\r\n            mode: \"cors\", // no-cors, cors, *same-origin\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                token: getState().token,\r\n                planet_names: getState().armies.map((army)=> army.planet),\r\n                vehicle_names: getState().armies.map((army) => army.vehicle)\r\n            })\r\n        })\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            dispatch(RECEIVE_SENDARMY(data));\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport {Col, Row, ListGroup, ListGroupItem} from 'react-bootstrap/lib';\r\n\r\nexport default class Sidebar extends React.Component{\r\n    formatString = (text) => {\r\n        return text.charAt(0).toUpperCase() + text.slice(1).replace(/_/g, ' ');\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <Row>\r\n                <Col xs={12}>\r\n                    Planets\r\n                    <ListGroup className='sidebar-list list-planets'>\r\n                    {\r\n                        this.props.assets.planets.map((planet, id) => (\r\n                            <ListGroupItem key = {id}>\r\n                                <div className='planet-name'>{planet.name}</div>\r\n                                <div className='planet-info'>\r\n                                    {Object.keys(planet).map((prop) => prop !== 'name' ? <div key={prop}>{this.formatString(prop) + ':'  + planet[prop]}</div> : '')}\r\n                                </div>\r\n                            </ListGroupItem>\r\n                        ))\r\n                    }\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    Vehicles\r\n                    <ListGroup className='sidebar-list list-vehicles'>\r\n                    {   \r\n                        this.props.assets.vehicles.map((vehicle, id) => (\r\n                            <ListGroupItem key = {id}>\r\n                                <div className='vehicle-name'>{vehicle.name}</div>\r\n                                <div className='vehicle-info'> \r\n                                    {Object.keys(vehicle).map((prop) => prop !== 'name' ? <div key={prop}>{this.formatString(prop) + ':'  + vehicle[prop]}</div> : '')}\r\n                                </div>\r\n                            </ListGroupItem>\r\n                        ))\r\n                    }\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Panel, FormControl, FormGroup} from 'react-bootstrap/lib';\r\nimport {connect} from 'react-redux';\r\n\r\nclass FFSelector extends React.Component{\r\n    handlePlanetSelect = () => {\r\n        this.props.dispatch({type:'SELECT_PLANET', armyID: this.props.armyID, planet: this.selectPlanet.value});\r\n    };\r\n\r\n    handleVehicleSelect = () => {\r\n        this.props.dispatch({type:'SELECT_VEHICLE', armyID: this.props.armyID, vehicle: this.selectVehicle.value});\r\n    };\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <Panel>\r\n                <Panel.Heading className='text-center'>Army {this.props.armyID + 1}</Panel.Heading>\r\n                <Panel.Body>\r\n                    <FormGroup controlId='formControlsSelect'>\r\n                        <FormControl \r\n                            onChange={this.handlePlanetSelect} \r\n                            value={this.props.army.planet}\r\n                            componentClass=\"select\" \r\n                            placeholder=\"Select Planet\"\r\n                            inputRef={(ref) => {this.selectPlanet = ref}}\r\n                        >\r\n                            {\r\n                                this.props.army.planet === '' ?\r\n                                    <option value='select'>Select Planet</option>\r\n                                :\r\n                                    <option value={this.props.army.planet}>{this.props.army.planet}</option>\r\n                            }\r\n                            {\r\n                                this.props.availablePlanets.map((planet, id) =>\r\n                                    <option value={planet} key={id+1}>{planet}</option>\r\n                                )\r\n                            }\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup controlId='formControlsSelect'>\r\n                        <FormControl\r\n                            onChange={this.handleVehicleSelect}\r\n                            value={this.props.army.vehicle}\r\n                            componentClass='select' \r\n                            placeholder='Select Vehicle'\r\n                            inputRef={(ref) => {this.selectVehicle = ref}}\r\n                        >\r\n                            {\r\n                                this.props.army.vehicle === '' ?\r\n                                    <option value='select'>Select Vehicle</option>\r\n                                :\r\n                                    <option value={this.props.army.vehicle}>{this.props.army.vehicle}</option>\r\n                            }\r\n                            {\r\n                                this.props.availableVehicles.map((vehicle, id) =>\r\n                                    <option value={vehicle.name} key={id+1}>{vehicle.name}</option>\r\n                                )\r\n                            }\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                </Panel.Body>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(FFSelector)","import React from 'react';\r\nimport {Alert, Col} from 'react-bootstrap/lib';\r\nimport FFSelector from './FFSelector';\r\n\r\nexport default class FFSelectorMain extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                    <Col xs={12}>\r\n                        <Alert bsStyle=\"info\">\r\n                            Select the planets you want to send armies to search in\r\n                        </Alert>\r\n                    </Col>\r\n                    {\r\n                        this.props.armies.map((army, id) => (\r\n                            <Col key={id} xs={12} md={3}>\r\n                                <FFSelector  \r\n                                    armyID={id} \r\n                                    availablePlanets={this.props.availableAssets.availablePlanets}\r\n                                    availableVehicles={this.props.availableAssets.availableVehicles}\r\n                                    army={this.props.armies[id]}\r\n                                />\r\n                            </Col>\r\n                        ))\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Col} from 'react-bootstrap/lib';\r\nimport {connect} from 'react-redux';\r\n\r\nclass FFSearchTimer extends React.Component{\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.updateSearchTime)\r\n            this.props.dispatch({type:'UPDATE_SEARCHTIME'});\r\n    }    \r\n    render()\r\n    {\r\n        return(\r\n            <Col xs={12} md={2} mdOffset={10}>\r\n                <div className='eta-block clearfix text-center'>\r\n                    <Col xs={8}>Search Time </Col>\r\n                    {\r\n                        this.props.searchTime === 0 ? '' : <Col xs={4}>{this.props.searchTime}</Col>\r\n                    }\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(FFSearchTimer)","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Button, Col} from 'react-bootstrap/lib/';\r\nimport {requestFindFalcone} from '../actions/';\r\n\r\nclass FFSendArmyControl extends React.Component{\r\n    handleSendArmyBtnClick = (e) => {\r\n        this.props.dispatch(requestFindFalcone());\r\n    }\r\n    render(){\r\n        return(\r\n            <Col xs={12} md={4} mdOffset={4}>\r\n                <Button disabled={!this.props.armyReady} onClick={this.props.armyReady ? this.handleSendArmyBtnClick : null} bsStyle=\"primary\" bsSize=\"large\" block>\r\n                    Send Army\r\n                </Button>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(FFSendArmyControl)","import React from 'react';\r\nimport {Col, Panel, Alert} from 'react-bootstrap/lib/'\r\nimport {ClipLoader} from 'react-spinners';\r\n\r\nexport default class FFArmyResult extends React.Component{\r\n    render(){\r\n        const sendingArmy =  (\r\n            <div className='loading sweet-loading'>\r\n                <div className='loading-msg'> Army is being deployed</div>\r\n                <ClipLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={150}\r\n                    color={'#123abc'}\r\n                    loading={true}\r\n                />\r\n          </div> \r\n        );\r\n        const armyReturned = (\r\n            <div>\r\n                <Alert bsStyle=\"info\">\r\n                    Army Deployment Result\r\n                </Alert>\r\n                <Panel bsStyle={this.props.armyResult.status ? 'success' : 'warning'}>\r\n                    <Panel.Heading>{this.props.armyResult.status ? 'Victory! Falcone Found!' : 'Search Failed'}</Panel.Heading>\r\n                    <Panel.Body>\r\n                        {this.props.armyResult.status ? 'Congragulations King Shan! Queen Al Falcone was found on planet ' + this.props.armyResult.planet_name + '!' : 'Apologies my King. Army failed in finding Queen Al Facone'}\r\n                    </Panel.Body>\r\n                </Panel>\r\n            </div>\r\n        );\r\n        console.log(this.props);\r\n        return(\r\n            <Col xs={12}>\r\n                {this.props.armyResult.hasOwnProperty('status')? armyReturned : sendingArmy}\r\n            </Col>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Row, Grid, Col, PageHeader} from 'react-bootstrap/lib';\r\nimport Sidebar from './Sidebar';\r\nimport FFSelectorMain from './FFSelectorMain';\r\nimport FFSearchETA from './FFSearchETA';\r\nimport FFSendArmyControl from './FFSendArmyControl';\r\nimport FFArmyResult from './FFArmyResult';\r\nimport {ClipLoader} from 'react-spinners';\r\n\r\nclass FFContainer extends React.Component{\r\n    handleResetBtnClick = () => {\r\n        this.props.dispatch({type:'RESET_APP'});\r\n    }\r\n\r\n    render(){\r\n        const findScreen=(\r\n            <Col xs={12}>\r\n                <Col className=\"sidebar\" md={3} lg={2}>\r\n                    <Sidebar assets={{planets: this.props.state.planets, vehicles: this.props.state.vehicles}}/>\r\n                </Col>\r\n                <Col className=\"main\" md={9} lg={10}>\r\n                    <Row>\r\n                        <FFSearchETA updateSearchTime={this.props.state.updateSearchTime} searchTime={this.props.state.searchTime}></FFSearchETA>\r\n                    </Row>\r\n                    <Row>\r\n                        <FFSelectorMain\r\n                            armyCount={this.props.state.armyCount} \r\n                            armies={this.props.state.armies}\r\n                            availableAssets={{availablePlanets: this.props.state.availablePlanets,availableVehicles: this.props.state.availableVehicles}}\r\n                        />\r\n                    </Row>\r\n                    <Row>\r\n                        <FFSendArmyControl armyReady={this.props.state.armyReady}/>\r\n                    </Row>\r\n                </Col>\r\n            </Col> \r\n        );\r\n        const loader = (\r\n            <Col xs={12} md={10} mdOffset={1}>\r\n                <div className='loading sweet-loading'>\r\n                    <ClipLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={150}\r\n                    color={'#123abc'}\r\n                    loading={true}\r\n                    />\r\n                </div> \r\n          </Col>\r\n        );\r\n        const armySentScreen = (\r\n            <Col xs={12} md={8} mdOffset={2}>\r\n                <FFArmyResult armyResult={this.props.state.armyResult}></FFArmyResult> \r\n            </Col>\r\n        );\r\n        return(\r\n            <Grid fluid={true}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                    <PageHeader className=''>\r\n                            Finding Falcone\r\n                            <small onClick={this.handleResetBtnClick} title='Reset Application' className='pull-right reset-link'>Reset</small>\r\n                    </PageHeader>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {this.props.state.initialized ? this.props.state.armySent? armySentScreen : findScreen : loader}\r\n                </Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        state: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FFContainer);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {initApp} from './actions';\nimport FFContainer from './components/FFContainer';\n\nclass App extends Component {\n  componentDidMount() {\n      this.props.dispatch(initApp())\n  }\n\n  render() {\n    return (\n      <div className=\"app-root\">\n        <FFContainer/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return{\n        state: state\n    }\n}\n\nexport default connect(mapStateToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport App from './App';\nimport store from './stores';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}